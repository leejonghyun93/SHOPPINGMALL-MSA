server:
  port: 8080

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
            allowedHeaders: "*"
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-register-public
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/register
            - Method=POST
          filters:
            - RewritePath=/api/users/register, /api/users/register

        - id: user-checkUserid-public
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/checkUserid
            - Method=GET
          filters:
            - RewritePath=/api/users/checkUserid, /api/users/checkUserid

#        - id: user-service-find-id
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/auth/find-id
#            - Method=POST
#          filters:
#            - RewritePath=/auth/find-id, /auth/find-id

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - name: JwtAuthorization
            - RewritePath=/api/users/(?<segment>.*), /api/users/${segment}

        - id: user-service-root
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users
          filters:
            - name: JwtAuthorization
            - RewritePath=/api/users, /api/users

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/api/board/**
          filters:
            - name: JwtAuthorization
            - RewritePath=/api/board/(?<segment>.*), /api/board/${segment}

        - id: user-service-register
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /${segment}

        - id: user-service-list
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/list
          filters:
            - RewritePath=/api/users/list, /api/users/list

        - id: user-service-get
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - name: JwtAuthorization
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /${segment}

        - id:  user-service-direct
          uri: http://localhost:8081
          predicates:
            - Path=/users/**
          filters:
            - name: JwtAuthorization
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /auth/${segment}

logging:
  level:
    org.springframework.cloud.gateway: DEBUG

jwt:
  secret-key: "verySecretKeyThatIsAtLeast32BytesLong1234"