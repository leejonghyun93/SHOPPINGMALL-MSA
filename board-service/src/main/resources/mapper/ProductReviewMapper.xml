<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosa.boardservice.mapper.ProductReviewMapper">


    <sql id="reviewColumns">
        REVIEW_ID as reviewId,
        PRODUCT_ID as productId,
        ORDER_ID as orderId,
        USER_ID as userId,
        TITLE as title,
        CONTENT as content,
        RATING as rating,
        REVIEW_STATUS as reviewStatus,
        HELPFUL_COUNT as helpfulCount,
        VIEW_COUNT as viewCount,
        IS_PHOTO as isPhoto,
        IS_VERIFIED as isVerified,
        AUTHOR_NAME as authorName,
        CREATED_DATE as createdDate,
        UPDATED_DATE as updatedDate
    </sql>

    <!-- 검색 조건 정의 -->
    <sql id="searchCondition">
        <if test="dto.searchValue != null and dto.searchValue != ''">
            AND (TITLE LIKE CONCAT('%', #{dto.searchValue}, '%')
            OR CONTENT LIKE CONCAT('%', #{dto.searchValue}, '%'))
        </if>
    </sql>
    <!-- 회원 이름 조회 -->
    <select id="selectMemberNameByUserId" resultType="string">
        SELECT NAME
        FROM tb_member
        WHERE USER_ID = #{userId}
          AND STATUS = 'ACTIVE'
          AND SECESSION_YN = 'N'
    </select>
    <select id="checkPurchaseVerification" resultType="int">
        SELECT COUNT(*)
        FROM tb_order o
                 INNER JOIN tb_order_item oi ON o.ORDER_ID = oi.ORDER_ID
        WHERE o.USER_ID = #{userId}
          AND oi.PRODUCT_ID = #{productId}
          AND o.ORDER_STATUS = '배송완료'
    </select>

    <!--  구매 정보 상세 조회 (선택사항) -->
    <select id="getPurchaseInfo" resultType="map">
        SELECT
            o.ORDER_ID as orderId,
            o.ORDER_DATE as orderDate,
            o.ORDER_STATUS as orderStatus,
            oi.PRODUCT_ID as productId,
            oi.PRODUCT_NAME as productName,
            oi.QUANTITY as quantity,
            oi.PRICE as price
        FROM tb_order o
                 INNER JOIN tb_order_item oi ON o.ORDER_ID = oi.ORDER_ID
        WHERE o.USER_ID = #{userId}
          AND oi.PRODUCT_ID = #{productId}
          AND o.ORDER_STATUS = '배송완료'
        ORDER BY o.ORDER_DATE DESC
            LIMIT 1
    </select>
    <!--  선택사항: 회원 전체 정보 조회 (필요한 경우) -->
    <select id="selectMemberByUserId" resultType="map">
        SELECT
            USER_ID as userId,
            NAME as name,
            EMAIL as email,
            PHONE as phone,
            STATUS as status
        FROM tb_member
        WHERE USER_ID = #{userId}
          AND STATUS = 'ACTIVE'
          AND SECESSION_YN = 'N'
    </select>
    <!-- 정렬 조건 정의 -->
    <sql id="orderByCondition">
        <choose>
            <when test="dto.sortBy != null and dto.sortBy == 'rating'">
                ORDER BY RATING DESC, CREATED_DATE DESC
            </when>
            <when test="dto.sortBy != null and dto.sortBy == 'createdDate'">
                ORDER BY CREATED_DATE DESC
            </when>
            <when test="dto.sortBy != null and dto.sortBy == 'createdAt'">
                ORDER BY CREATED_DATE DESC
            </when>
            <otherwise>
                ORDER BY CREATED_DATE DESC
            </otherwise>
        </choose>
    </sql>

    <!-- 상품별 정렬 조건 정의 -->
    <sql id="productOrderByCondition">
        <choose>
            <when test="sortBy != null and sortBy == 'rating'">
                ORDER BY RATING DESC, CREATED_DATE DESC
            </when>
            <when test="sortBy != null and sortBy == 'createdDate'">
                ORDER BY CREATED_DATE DESC
            </when>
            <when test="sortBy != null and sortBy == 'createdAt'">
                ORDER BY CREATED_DATE DESC
            </when>
            <otherwise>
                ORDER BY CREATED_DATE DESC
            </otherwise>
        </choose>
    </sql>

    <!-- 전체 게시글 개수 조회 (검색 조건 포함) -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM tb_product_review
        WHERE 1=1
        <if test="searchValue != null and searchValue != ''">
            AND (TITLE LIKE CONCAT('%', #{searchValue}, '%')
            OR CONTENT LIKE CONCAT('%', #{searchValue}, '%'))
        </if>
    </select>

    <!-- 페이징된 게시글 목록 조회 -->
    <select id="selectPagedBoards" resultType="org.kosa.boardservice.dto.ProductReviewDto">
        SELECT
        <include refid="reviewColumns"/>
        FROM tb_product_review
        WHERE 1=1
        <include refid="searchCondition"/>
        <include refid="orderByCondition"/>
        LIMIT #{dto.startRow}, #{dto.size}
    </select>

    <!-- 상품별 리뷰 조회 -->
    <select id="selectProductReviewsByStringId" resultType="org.kosa.boardservice.dto.ProductReviewDto">
        SELECT
        <include refid="reviewColumns"/>
        FROM tb_product_review
        WHERE PRODUCT_ID = #{productId}
        <include refid="productOrderByCondition"/>
        LIMIT #{startRow}, #{size}
    </select>

    <!-- 상품별 리뷰 개수 조회 -->
    <select id="getProductReviewCountByStringId" resultType="int">
        SELECT COUNT(*)
        FROM tb_product_review
        WHERE PRODUCT_ID = #{productId}
    </select>

    <!-- 리뷰 상세 조회 -->
    <select id="selectReviewById" resultType="org.kosa.boardservice.dto.ProductReviewDto">
        SELECT
        <include refid="reviewColumns"/>
        FROM tb_product_review
        WHERE REVIEW_ID = #{reviewId}
    </select>

    <!-- 리뷰 등록 -->
    <insert id="insertReview" parameterType="org.kosa.boardservice.dto.ProductReviewDto">
        INSERT INTO tb_product_review (
            REVIEW_ID,
            PRODUCT_ID,
            ORDER_ID,
            USER_ID,
            TITLE,
            CONTENT,
            RATING,
            REVIEW_STATUS,
            HELPFUL_COUNT,
            VIEW_COUNT,
            IS_PHOTO,
            IS_VERIFIED,
            AUTHOR_NAME,
            CREATED_DATE,
            UPDATED_DATE
        ) VALUES (
                     #{reviewId},
                     #{productId},
                     #{orderId},
                     #{userId},
                     #{title},
                     #{content},
                     #{rating},
                     #{reviewStatus},
                     #{helpfulCount},
                     #{viewCount},
                     #{isPhoto},
                     #{isVerified},
                     #{authorName},
                     #{createdDate},
                     #{updatedDate}
                 )
    </insert>

    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="org.kosa.boardservice.dto.ProductReviewDto">
        UPDATE tb_product_review
        SET
        TITLE = #{title},
        CONTENT = #{content},
        RATING = #{rating},
        UPDATED_DATE = #{updatedDate}
        <if test="reviewStatus != null">, REVIEW_STATUS = #{reviewStatus}</if>
        <if test="authorName != null">, AUTHOR_NAME = #{authorName}</if>
        WHERE REVIEW_ID = #{reviewId}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview">
        DELETE FROM tb_product_review
        WHERE REVIEW_ID = #{reviewId}
    </delete>

</mapper>