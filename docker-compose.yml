version: '3.8'

networks:
  shopmall-network:
    driver: bridge

services:
  # 1. Eureka Service (서비스 디스커버리)
  eureka-service:
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 250M
        reservations:
          memory: 150M

  # 2. Config Service (설정 관리)
  config-service:
    build:
      context: ./config-service
      dockerfile: Dockerfile
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  # 3. API Gateway (라우팅)
  apigateway-service:
    build:
      context: ./apigateway-service
      dockerfile: Dockerfile
    container_name: apigateway-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
      - config-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 150M

  # 4. Auth Service (인증/권한)
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  # 5. User Service (사용자 관리)
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8103:8103"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  # 6. Product Service (상품 관리)
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  # 7. Category Service (카테고리 관리)
  category-service:
    build:
      context: ./category-service
      dockerfile: Dockerfile
    container_name: category-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  # 8. Cart Service (장바구니)
  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  # 9. Order Service (주문 관리)
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  # 10. Payment Service (결제)
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  # 11. Board Service (게시판)
  board-service:
    build:
      context: ./board-service
      dockerfile: Dockerfile
    container_name: board-service
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

  # 12. Image Service (이미지 관리)
  image-service:
    build:
      context: ./image-service
      dockerfile: Dockerfile
    container_name: image-service
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  # 13. Live Streaming Service (라이브 스트리밍)
  live-streaming-service:
    build:
      context: ./live-streaming-service
      dockerfile: Dockerfile
    container_name: live-streaming-service
    ports:
      - "8089:8089"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  # 14. Live Chat Service (실시간 채팅)
  live-chat-service:
    build:
      context: ./live-chat-service
      dockerfile: Dockerfile
    container_name: live-chat-service
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  # 15. Notification Service (알림)
  notification-service:
    build:
      context: live-streaming-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8096:8096"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - shopmall-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M