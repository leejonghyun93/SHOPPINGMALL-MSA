<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.kosa.livestreamingservice.dao.chat.ChatDAO">

    <insert id="insertChatMessage">
        INSERT INTO tb_live_broadcast_chats (
            broadcast_id,
            user_id,
            message,
            message_type,
            is_deleted,
            is_blurred,
            is_pinned,
            product_id
        ) VALUES (
                     #{broadcastId},
                     #{userId},
                     #{text},
                     #{type},
                     #{isDeleted},
                     #{isBlurred},
                     #{isPinned},
                     #{productId}
                 )
    </insert>
    <select id="getBroadcastStatusById" parameterType="long" resultType="org.kosa.livestreamingservice.dto.chat.BroadcastStatusDTO">
        SELECT
            broadcast_id as broadcastId,
            broadcast_status as status,
            title,
            broadcaster_id as broadcasterId,
            current_viewers as currentViewers,
            is_public as isPublic
        FROM tb_live_broadcasts
        WHERE broadcast_id = #{broadcastId}
    </select>
    <select id="getBroadcasterIdByBroadcastId" parameterType="long" resultType="string">
        SELECT broadcaster_id
        FROM tb_live_broadcasts
        WHERE broadcast_id = #{broadcastId}
    </select>
    <select id="getChatMessagesByBroadcastId" resultType="org.kosa.livestreamingservice.dto.chat.ChatMessageDTO">
        SELECT
            c.user_id AS userId,
            m.nickname AS 'from',
                c.broadcast_id AS broadcastId,
            c.message AS text,
            c.message_type AS type,
            c.is_blurred AS isBlurred,
            c.is_deleted AS isDeleted,
            c.is_pinned AS isPinned,
            c.created_at
        FROM tb_live_broadcast_chats c
                 JOIN tb_member m ON c.user_id = m.USER_ID
        WHERE c.broadcast_id = #{broadcastId}
        ORDER BY c.created_at ASC
    </select>

    <update id="updateStatus">
        UPDATE tb_live_broadcasts
        SET broadcast_status = #{broadcast_status}
        <if test="actual_start_time != null">
            , actual_start_time = #{actual_start_time}
        </if>
        <if test="actual_end_time != null">
            , actual_end_time = #{actual_end_time}
        </if>
        WHERE broadcast_id = #{broadcast_id}
    </update>
</mapper>